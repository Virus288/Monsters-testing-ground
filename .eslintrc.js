module.exports = {
  env: {
    commonjs: true,
    node: true,
    browser: true,
    es6: true,
    jest: true,
  },
  globals: {
    React: true,
    expect: true,
    JSX: true,
  },
  extends: [
    'airbnb',
    'erb',
    'eslint-config-prettier',
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:jest/recommended',
    'plugin:react/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:@typescript-eslint/recommended-requiring-type-checking',
    'plugin:@typescript-eslint/strict',
    'prettier',
  ],
  plugins: ['@typescript-eslint', 'eslint-plugin-prettier', 'react', 'jsx-a11y'],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    ecmaVersion: 2022,
    sourceType: 'module',
    project: './tsconfig.json',
    tsconfigRootDir: __dirname,
    createDefaultProgram: true,
  },
  settings: {
    'import/resolver': {
      node: {},
      webpack: {
        config: require.resolve('./.erb/configs/webpack.config.eslint.ts'),
      },
      typescript: {},
    },
    'import/parsers': {
      '@typescript-eslint/parser': ['.ts', '.tsx'],
    },
  },
  rules: {
    'array-callback-return': 2,
    'class-methods-use-this': 0,
    'consistent-return': 2,
    'default-case': 2,
    'default-case-last': 2,
    'default-param-last': 2,
    'dot-notation': 2,
    eqeqeq: 2,
    'import/extensions': [
      2,
      'ignorePackages',
      {
        ts: 'never',
        tsx: 'never',
      },
    ],
    'import/no-cycle': 2,
    'import/no-extraneous-dependencies': 0,
    'import/no-unresolved': 2,
    'import/prefer-default-export': 2,
    'jsx-a11y/label-has-for': 0,
    'jsx-a11y/click-events-have-key-events': 0,
    'jsx-a11y/no-static-element-interactions': 0,
    'max-classes-per-file': 2,
    'no-await-in-loop': 2,
    'no-bitwise': 2,
    'no-class-assign': 2,
    'no-cond-assign': 2,
    'no-else-return': 2,
    'no-empty': 2,
    'no-empty-function': 2,
    'no-eq-null': 2,
    'no-eval': 2,
    'no-confusing-arrow': 0,
    'no-constant-condition': 2,
    'no-console': [2, { allow: ['info', 'trace'] }],
    'no-constructor-return': 0,
    'no-empty-pattern': 2,
    'no-func-assign': 2,
    'no-implicit-coercion': 2,
    'no-implicit-globals': 2,
    'no-implied-eval': 2,
    'no-import-assign': 2,
    'no-lone-blocks': 2,
    'no-invalid-this': 2,
    'no-multi-str': 2,
    'no-new-func': 2,
    'no-new-wrappers': 2,
    'no-non-null-assertion': 0,
    'no-unused-vars': 2,
    'no-param-reassign': [2, { props: false }],
    'no-plusplus': 0,
    'no-restricted-modules': 2,
    'no-return-await': 2,
    'no-setter-return': 2,
    'no-shadow': 0,
    'no-this-before-super': 2,
    'no-throw-literal': 2,
    'no-trailing-spaces': 2,
    'no-underscore-dangle': 0,
    'no-unexpected-multiline': 2,
    'no-unreachable': 2,
    'no-unsafe-negation': 2,
    'no-use-before-define': 2,
    'no-octal': 2,
    'no-redeclare': 2,
    'no-regex-spaces': 2,
    'no-return-assign': 2,
    'no-script-url': 2,
    'no-self-compare': 2,
    'no-sequences': 2,
    'no-shadow-restricted-names': 2,
    'no-unused-expressions': 2,
    'no-unused-labels': 2,
    'no-useless-call': 2,
    'no-useless-concat': 2,
    'no-useless-constructor': 0,
    'no-useless-escape': 2,
    'no-useless-rename': 2,
    'no-useless-return': 2,
    'no-void': 2,
    'no-var': 2,
    'object-curly-newline': [
      2,
      {
        consistent: true,
      },
    ],
    'object-shorthand': 2,
    'prefer-const': 2,
    'prefer-arrow-callback': 2,
    'prefer-destructuring': 2,
    'prefer-exponentiation-operator': 2,
    'prefer-numeric-literals': 2,
    'prefer-object-spread': 2,
    'prefer-promise-reject-errors': 2,
    'prefer-regex-literals': 2,
    'prefer-rest-params': 2,
    'prefer-spread': 2,
    'prefer-template': 2,
    'prettier/prettier': 2,
    'react/destructuring-assignment': 2,
    'react/function-component-definition': [
      'error',
      {
        namedComponents: ['function-declaration', 'arrow-function'],
        unnamedComponents: 'arrow-function',
      },
    ],
    'react/jsx-filename-extension': [
      2,
      {
        extensions: ['.tsx'],
      },
    ],
    'react/react-in-jsx-scope': 2,
    'require-atomic-updates': 2,
    'require-jsdoc': 2,
    'require-unicode-regexp': 2,
    'require-yield': 2,
    'spaced-comment': 2,
    strict: 2,
    semi: 2,
    'use-isnan': 2,
    'valid-typeof': 2,
    quotes: [
      2,
      'single',
      {
        avoidEscape: true,
      },
    ],
    '@typescript-eslint/consistent-type-assertions': [
      2,
      {
        assertionStyle: 'as',
      },
    ],
    '@typescript-eslint/consistent-type-definitions': ['error', 'interface'],
    '@typescript-eslint/consistent-type-imports': [
      2,
      {
        prefer: 'type-imports',
        disallowTypeAnnotations: false,
      },
    ],
    '@typescript-eslint/explicit-function-return-type': 2,
    '@typescript-eslint/explicit-module-boundary-types': 2,
    '@typescript-eslint/naming-convention': [
      2,
      {
        selector: 'interface',
        format: ['PascalCase'],
        custom: {
          regex: '^I[A-Z]',
          match: true,
        },
      },
      {
        selector: 'enum',
        format: ['PascalCase'],
        custom: {
          regex: '^E[A-Z]',
          match: true,
        },
      },
      {
        selector: 'variable',
        format: ['camelCase', 'PascalCase'],
      },
      {
        selector: 'classProperty',
        modifiers: ['private'],
        format: ['camelCase'],
        leadingUnderscore: 'require',
      },
      {
        selector: 'typeLike',
        format: ['PascalCase'],
      },
      {
        selector: 'variable',
        format: ['camelCase', 'PascalCase'],
      },
    ],
    '@typescript-eslint/no-dynamic-delete': 0,
    '@typescript-eslint/no-empty-interface': 2,
    '@typescript-eslint/no-empty-function': 0,
    '@typescript-eslint/no-explicit-any': 2,
    '@typescript-eslint/no-extraneous-class': 0,
    '@typescript-eslint/no-non-null-assertion': 0,
    '@typescript-eslint/no-shadow': 0,
    '@typescript-eslint/no-unnecessary-condition': 0,
    '@typescript-eslint/no-unused-expressions': 0,
    '@typescript-eslint/no-useless-constructor': 2,
    '@typescript-eslint/no-unused-vars': 2,
    '@typescript-eslint/no-this-alias': [
      2,
      {
        allowedNames: ['self'],
      },
    ],
    '@typescript-eslint/no-var-requires': 0,
    '@typescript-eslint/prefer-nullish-coalescing': 2,
    '@typescript-eslint/semi': ['error'],
    '@typescript-eslint/typedef': 2,
  },
};
